{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","setQuery","filter","setFilter","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","selectedUser","setSelectedUser","loading","setLoading","useEffect","userId","finally","href","email","name","App","isLoading","setIsLoading","setTodos","visibleTodos","useMemo","preparedTodos","normalizedQuery","toLowerCase","trim","includes","getVisibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bea67d4.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setSelectedTodo: (value: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodo?.id === todo.id,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expended\">\n            <p className={classNames({\n              'has-text-danger': todo.completed === false,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames('far', {\n                    'fa-eye': todo.id !== selectedTodo?.id,\n                    'fa-eye-slash': todo.id === selectedTodo?.id,\n                  })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  query: string;\n  setQuery: (value: string) => void;\n  filter: Filter;\n  setFilter: (value: Filter) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  setQuery,\n  filter,\n  setFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={event => setFilter(event.target.value as Filter)}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setSelectedUser)\n        .finally(() => setLoading(false));\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading && (!selectedTodo || !selectedUser) ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { getTodos } from './api';\n\nfunction getVisibleTodos(todos: Todo[], query: string, filter: string) {\n  let preparedTodos = [...todos];\n  const normalizedQuery = query.toLowerCase().trim();\n\n  if (query) {\n    preparedTodos = preparedTodos\n      .filter(todo => todo.title.toLowerCase().includes(normalizedQuery));\n  }\n\n  switch (filter) {\n    case Filter.ALL:\n    default:\n      return preparedTodos;\n\n    case Filter.COMPLETED:\n      return preparedTodos.filter(todo => todo.completed);\n\n    case Filter.ACTIVE:\n      return preparedTodos.filter(todo => todo.completed === false);\n  }\n}\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState<Filter>(Filter.ALL);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const visibleTodos = useMemo(() => (\n    getVisibleTodos(todos, query, filter)\n  ), [todos, query, filter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                filter={filter}\n                setFilter={setFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />\n                ) : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}